* Editor
- use vscode
- Add .editorconfig
* Package Mangement
- use npm
- setup a default package.json needed for
  all projects
** scanning package for vulnerabilities
- use "node security platform"
- run "nsp check" as part of your build
- may want to add it as part of your "npm start" script
- install nsp globally to run the commanline tool.

sudo npm install nsp -g

- to run nsp do this:

nsp check

* Dev Web Servers
- run express
- how do you share this with others?
I need to be able to push my code to git and have kubernetes setup


* Automation
- task automation

** npm scripts - BEST CHOICE for automation
- use "npm scripts" to automate
- declared in the package.json
- leverage your OS's command line

*** why npm scripts?
https://medium.freecodecamp.com/why-i-left-gulp-and-grunt-for-npm-scripts-3d6853dd22b8
- use tools directly
- no need for separate plugins
- simpler debugging
- better docs
- easier to learn
- can call separate scripts that use node


*** run multiple scripts at once
runall package
** gulp
- improves on grunt
- configured via a grunt file
- very popular


** grunt
- task runner



* Transpiling
- babel which supports latest js
- typescript

* Bundling
- bundled up for usage.
- commonJS pattern does not work in web browsers, but does work in node
 - you need to bundle npm packages into a format that the browser can consume
- package any javascript into a single file or startegically into separate files

** module formats
*** AMD
*** CommonJS
used by node.js

*** UMB
*** IIFE (immediately invoked function expressions)

// this is an IIFE

(function(){
// my code here
})();

***  ES6 modules
**** standardized
**** statically analyzable
  improved autocomplete
  intelligent refactoring
**** easy to read


** names of bundlers
bundle up code into single minified file. you can use npm packages and they are bundled up
for the web.  takes commonJS format of node and makes it accessible to the browser.

*** require.js
- amd based

*** webpack
- Bundles js
- also, bundles css, images, etc like JS
- includes a hot-reloading web server
- webpack will bundle all our assets up into a single file that runs in our target environment



*** browserify
- first bundle to reach mass adoption
- utilize npm packages on the web

*** jspm

*** rollup


* Linting


* Unit Testing


* CI server


* http requests


* production builds


* automated deploy
